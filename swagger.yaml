openapi: 3.0.0
paths:
  /api/blocklists:
    post:
      summary: Create a blocklist.
      description: Blocklist can contain either only IPs or CIDRs.
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                filename:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Blocklist created and UUID generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  created:
                    type: array
                    items:
                      $ref: '#/components/schemas/BlocklistRecord'
        '400':
          description: Contents of blocklist are invalid, invalid file extension, non-unique name
        '403':
          description: User is not authorized
    get:
      summary: Get all blocklists.
      description: Get a pagniated response of block list IDs.
      responses:
        '200':
          description: Paginated blocklist records returned
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/BlocklistRecord'
        '403':
          description: User is not authorized
         
  /api/blocklists/{id}:
    patch:
      summary: Update or delete a certain blocklist.
      description: Get a pagniated response of block list IDs.
      parameters:
        - in: path
          name: id
          required: true
          description: Blocklist UUID.
          schema:
            type: string
        - in: body
          name: delete
          required: false
          description: List of IP addresses IDs or CIDR ranges IDs to delete
          schema:
            type: array
            items:
              type: string
        - in: body
          name: add
          required: false
          description: List of IP addresses or CIDR ranges to add
          schema:
            type: array
            items:
              type: string

      responses:
        '200':
          description: Added IP or CIDR addresses returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/BlocklistEntry'
        '403':
          description: User is not authorized
        '404':
          description: Blocklist not found
          
    get:
      summary: Get a specific blocklist and its contents.
      parameters:
        - in: path
          name: id
          required: true
          description: Blocklist UUID.
          schema:
            type: string
      responses:
        '200':
          description: Found blocklist is returned
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Blocklist'
        '403':
          description: User is not authorized
        '404':
          description: Blocklist not found
    delete:
      summary: Delete a specific blocklist and its contents.
      parameters:
        - in: path
          name: id
          required: true
          description: Blocklist UUID.
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted blocklist
        '403':
          description: User is not authorized
        '404': 
          description: Blocklist not found
          
  /api/search:
    get:
      summary: Search if a specific IP is in a blocklist.
      parameters:
        - in: query
          name: ip
          required: true
          description: IP address.
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted blocklist
          content:
            type: application/json
            schema:
              type: array
              items:
                $ref: '#/components/schemas/IPSearchResult'

        '403':
          description: User is not authorized
        '404':
          description: Blocklist not found
          
  /api/blocked:
    get:
      summary: Search if a specific IP is blocked (in an IP blocklist or found in a CIDR range).
      parameters:
        - in: query
          name: ip
          required: true
          description: IP address
          schema:
            type: string
      responses:
        '200':
          description: IP address and if it is blocked
          content:
            type: application/json
            schema:
              type: object
              properties:
                - name: ipaddress
                  type: string
                - name: isBlocked
                  type: boolean
        '403':
          description: User is not authorized

components:
  schemas:
    Blocklist:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [ip, cidr]
        entries:
          type: array
          items:
            $ref: '#/components/schemas/BlocklistEntry'
      required:
        - id
        - name
        - type
    
    BlocklistRecord:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
          enum: [ip, cidr]
        entries:
          type: array
          items:
            $ref: '#/components/schemas/BlocklistEntry'
        required:
          - id
          - name
          - type

    BlocklistEntry:
      type: object
      properties:
        id:
          type: integer
        value:
          type: string
        type:
          description: if the value is an IP address or CIDR
          type: string
          enum: [ip, cidr]
      required:
        - id
        - value
        - type
            
    IPSearchResult:
    type: object
    properties:
      result:
        type: array
        items:
          type: object
          properties:
            ip:
              type: string
              description: IP address searched
            blocklistIds:
              description: Blocklist IDs where the IP is found
              type: array
              items:
                type: string
